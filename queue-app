<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏Ñ‡∏¥‡∏ß‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏°‡∏™‡πÄ‡∏ã‡∏ô‡πÄ‡∏à‡∏≠‡∏£‡πå</title>
    <link href="https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Sarabun', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5em;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        
        .header p {
            font-size: 1.2em;
            opacity: 0.9;
        }
        
        .content {
            padding: 40px;
        }
        
        .form-section {
            background: #f8f9ff;
            padding: 30px;
            border-radius: 15px;
            margin-bottom: 30px;
            border-left: 5px solid #4facfe;
        }
        
        .form-section h2 {
            color: #333;
            font-size: 1.5em;
            margin-bottom: 20px;
            font-weight: 600;
        }
        
        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        .form-group label {
            font-weight: 600;
            color: #555;
            margin-bottom: 8px;
            font-size: 1em;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1em;
            font-family: 'Sarabun', sans-serif;
            transition: all 0.3s ease;
            background: white;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }
        
        .btn {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.1em;
            font-weight: 600;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-family: 'Sarabun', sans-serif;
            margin-right: 10px;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(79, 172, 254, 0.3);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        .btn-secondary {
            background: #6c757d;
        }
        
        .btn-secondary:hover {
            background: #5a6268;
        }
        
        .table-section {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            overflow: hidden;
        }
        
        .table-header {
            background: #f8f9ff;
            padding: 20px;
            border-bottom: 2px solid #e1e5e9;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }
        
        .table-header h2 {
            color: #333;
            font-size: 1.5em;
            font-weight: 600;
            margin: 0;
        }
        
        .date-navigation {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-wrap: wrap;
        }
        
        .date-nav-btn {
            background: #4facfe;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-family: 'Sarabun', sans-serif;
            font-size: 0.9em;
            transition: all 0.2s ease;
        }
        
        .date-nav-btn:hover {
            background: #357abd;
        }
        
        .current-date {
            background: white;
            padding: 8px 16px;
            border-radius: 8px;
            border: 2px solid #4facfe;
            color: #4facfe;
            font-weight: 600;
            min-width: 120px;
            text-align: center;
        }
        
        .table-container {
            overflow-x: auto;
            max-height: 600px;
            overflow-y: auto;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 0.95em;
        }
        
        th, td {
            padding: 15px 12px;
            text-align: left;
            border-bottom: 1px solid #e1e5e9;
        }
        
        th {
            background: #f8f9ff;
            font-weight: 600;
            color: #333;
            position: sticky;
            top: 0;
            z-index: 10;
        }
        
        td {
            color: #555;
        }
        
        tr:hover {
            background: #f8f9ff;
        }
        
        .status {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85em;
            font-weight: 500;
            text-align: center;
            white-space: nowrap;
        }
        
        .status.pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .status.completed {
            background: #d4edda;
            color: #155724;
        }
        
        .status.cancelled {
            background: #f8d7da;
            color: #721c24;
        }
        
        .status.postponed {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .actions {
            display: flex;
            gap: 8px;
        }
        
        .btn-small {
            padding: 6px 12px;
            font-size: 0.85em;
            border-radius: 6px;
            border: none;
            cursor: pointer;
            font-family: 'Sarabun', sans-serif;
            transition: all 0.2s ease;
        }
        
        .btn-edit {
            background: #ffc107;
            color: #212529;
        }
        
        .btn-edit:hover {
            background: #e0a800;
        }
        
        .btn-delete {
            background: #dc3545;
            color: white;
        }
        
        .btn-delete:hover {
            background: #c82333;
        }
        
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }
        
        .empty-state h3 {
            font-size: 1.3em;
            margin-bottom: 10px;
            color: #888;
        }
        
        .empty-state p {
            color: #999;
        }
        
        .queue-number {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            text-align: center;
            min-width: 60px;
        }
        
        .time-display {
            font-weight: 600;
            color: #4facfe;
        }
        
        .auto-save-indicator {
            position: fixed;
            top: 20px;
            right: 20px;
            background: #28a745;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-size: 0.9em;
            font-weight: 500;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 1000;
        }
        
        .auto-save-indicator.show {
            opacity: 1;
        }
        
        @media (max-width: 768px) {
            .content {
                padding: 20px;
            }
            
            .form-grid {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .header p {
                font-size: 1em;
            }
            
            .date-navigation {
                flex-direction: column;
                width: 100%;
            }
            
            .table-header {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏á‡∏Ñ‡∏¥‡∏ß‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏°‡∏™‡πÄ‡∏ã‡∏ô‡πÄ‡∏à‡∏≠‡∏£‡πå</h1>
            <p>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö</p>
        </div>
        
        <div class="content">
            <div class="form-section">
                <h2>üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</h2>
                <form id="jobForm">
                    <div class="form-grid">
                        <div class="form-group">
                            <label for="date">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô *</label>
                            <input type="date" id="date" name="date" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="location">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô *</label>
                            <input type="text" id="location" name="location" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="time">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô *</label>
                            <select id="time" name="time" required>
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="owner">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô *</label>
                            <input type="text" id="owner" name="owner" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="status">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ *</label>
                            <select id="status" name="status" required>
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</option>
                                <option value="‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£">‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</option>
                                <option value="‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß">‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</option>
                                <option value="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</option>
                                <option value="‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á">‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="messenger">‡πÅ‡∏°‡∏™ *</label>
                            <select id="messenger" name="messenger" required>
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏°‡∏™</option>
                                <option value="‡πÄ‡∏•‡πá‡∏Å">‡πÄ‡∏•‡πá‡∏Å</option>
                                <option value="‡πÄ‡∏Å‡πà‡∏á">‡πÄ‡∏Å‡πà‡∏á</option>
                                <option value="‡∏à‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å">‡∏à‡πâ‡∏≤‡∏á‡∏ô‡∏≠‡∏Å</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="details">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô *</label>
                        <textarea id="details" name="details" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô..." required></textarea>
                    </div>
                    
                    <button type="submit" class="btn">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</button>
                    <button type="button" class="btn btn-secondary" onclick="cancelEdit()">‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
                </form>
            </div>
            
            <div class="table-section">
                <div class="table-header">
                    <h2>üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h2>
                    <div class="date-navigation">
                        <button class="date-nav-btn" onclick="changeMonth(-1)">‚óÄ ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô</button>
                        <button class="date-nav-btn" onclick="changeDate(-1)">‚óÄ ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô</button>
                        <div class="current-date" id="currentViewDate"></div>
                        <button class="date-nav-btn" onclick="changeDate(1)">‡∏ß‡∏±‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚ñ∂</button>
                        <button class="date-nav-btn" onclick="changeMonth(1)">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚ñ∂</button>
                    </div>
                </div>
                <div class="table-container">
                    <table id="jobTable">
                        <thead>
                            <tr>
                                <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                                <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                                <th>‡πÄ‡∏ß‡∏•‡∏≤</th>
                                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà</th>
                                <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                                <th>‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô</th>
                                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                <th>‡πÅ‡∏°‡∏™</th>
                                <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                            </tr>
                        </thead>
                        <tbody id="jobTableBody">
                            <tr>
                                <td colspan="9" class="empty-state">
                                    <h3>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</h3>
                                    <p>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="auto-save-indicator" id="autoSaveIndicator">
        üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
    </div>

    <script>
        // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        let jobs = [];
        let editingIndex = -1;
        let currentViewDate = new Date();
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        function init() {
            setupDateInput();
            setupTimeOptions();
            loadFromStorage();
            updateCurrentViewDate();
            renderTable();
            startAutoSave();
        }
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
        function setupDateInput() {
            const dateInput = document.getElementById('date');
            dateInput.min = new Date().toISOString().split('T')[0];
            dateInput.value = new Date().toISOString().split('T')[0];
        }
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏ö‡∏ö 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
        function setupTimeOptions() {
            const timeSelect = document.getElementById('time');
            for (let hour = 0; hour < 24; hour++) {
                for (let minute = 0; minute < 60; minute += 30) {
                    const timeString = `${hour.toString().padStart(2, '0')}.${minute.toString().padStart(2, '0')} ‡∏ô.`;
                    const option = document.createElement('option');
                    option.value = timeString;
                    option.textContent = timeString;
                    timeSelect.appendChild(option);
                }
            }
        }
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
        function loadFromStorage() {
            const stored = localStorage.getItem('messengerJobs');
            if (stored) {
                jobs = JSON.parse(stored);
            }
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
        function saveToStorage() {
            localStorage.setItem('messengerJobs', JSON.stringify(jobs));
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        function showAutoSaveIndicator() {
            const indicator = document.getElementById('autoSaveIndicator');
            indicator.classList.add('show');
            setTimeout(() => {
                indicator.classList.remove('show');
            }, 2000);
        }
        
        // ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        function startAutoSave() {
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setInterval(() => {
                saveToStorage();
                showAutoSaveIndicator();
            }, 30000);
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets ‡∏ó‡∏∏‡∏Å 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            setInterval(() => {
                checkAndSaveToGoogleSheets();
            }, 24 * 60 * 60 * 1000);
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Google Apps Script)
        function checkAndSaveToGoogleSheets() {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            const lastSave = localStorage.getItem('lastGoogleSheetsSave');
            const now = new Date().getTime();
            
            if (!lastSave || (now - parseInt(lastSave)) >= 24 * 60 * 60 * 1000) {
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets
                // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Google Apps Script Web App URL
                const googleSheetsUrl = 'https://script.google.com/macros/s/AKfycbybiOXh8aMfX0CN_69ZHL-PM9Mt-8S8f66B8AG9h57fYjm3RCVM1NxowrIKfRKcNII/exec';
                
                if (googleSheetsUrl && googleSheetsUrl !== 'YOUR_GOOGLE_APPS_SCRIPT_URL_HERE') {
                    fetch(googleSheetsUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ jobs: jobs })
                    })
                    .then(response => response.json())
                    .then(data => {
                        console.log('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', data);
                        localStorage.setItem('lastGoogleSheetsSave', now.toString());
                    })
                    .catch(error => {
                        console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets:', error);
                    });
                }
            }
        }
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        function updateCurrentViewDate() {
            const dateDisplay = document.getElementById('currentViewDate');
            dateDisplay.textContent = currentViewDate.toLocaleDateString('th-TH', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
        }
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏π
        function changeDate(days) {
            currentViewDate.setDate(currentViewDate.getDate() + days);
            updateCurrentViewDate();
            renderTable();
        }
        
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏î‡∏π
        function changeMonth(months) {
            currentViewDate.setMonth(currentViewDate.getMonth() + months);
            updateCurrentViewDate();
            renderTable();
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô
        document.getElementById('jobForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const job = {
                date: formData.get('date'),
                location: formData.get('location'),
                time: formData.get('time'),
                owner: formData.get('owner'),
                status: formData.get('status'),
                messenger: formData.get('messenger'),
                details: formData.get('details'),
                id: editingIndex >= 0 ? jobs[editingIndex].id : Date.now(),
                createdAt: editingIndex >= 0 ? jobs[editingIndex].createdAt : new Date().toISOString()
            };
            
            if (editingIndex >= 0) {
                jobs[editingIndex] = job;
                editingIndex = -1;
                document.querySelector('.btn[type="submit"]').textContent = '‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà';
            } else {
                jobs.push(job);
            }
            
            saveToStorage();
            renderTable();
            this.reset();
            setupDateInput();
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            showAutoSaveIndicator();
        });
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        function cancelEdit() {
            editingIndex = -1;
            document.getElementById('jobForm').reset();
            setupDateInput();
            document.querySelector('.btn[type="submit"]').textContent = '‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà';
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        function renderTable() {
            const tbody = document.getElementById('jobTableBody');
            
            // ‡∏Å‡∏£‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            const currentDateStr = currentViewDate.toISOString().split('T')[0];
            const filteredJobs = jobs.filter(job => job.date === currentDateStr);
            
            if (filteredJobs.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="9" class="empty-state">
                            <h3>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h3>
                            <p>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô</p>
                        </td>
                    </tr>
                `;
                return;
            }
            
            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
            filteredJobs.sort((a, b) => {
                const timeA = a.time.replace(' ‡∏ô.', '').replace('.', ':');
                const timeB = b.time.replace(' ‡∏ô.', '').replace('.', ':');
                return timeA.localeCompare(timeB);
            });
            
            tbody.innerHTML = filteredJobs.map((job, index) => {
                const statusClass = {
                    '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': 'pending',
                    '‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß': 'completed',
                    '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å': 'cancelled',
                    '‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á': 'postponed'
                }[job.status] || 'pending';
                
                return `
                    <tr>
                        <td><span class="queue-number">${index + 1}</span></td>
                        <td>${new Date(job.date).toLocaleDateString('th-TH')}</td>
                        <td><span class="time-display">${job.time}</span></td>
                        <td>${job.location}</td>
                        <td>${job.details}</td>
                        <td>${job.owner}</td>
                        <td><span class="status ${statusClass}">${job.status}</span></td>
                        <td>${job.messenger}</td>
                        <td class="actions">
                            <button class="btn-small btn-edit" onclick="editJob(${jobs.indexOf(job)})">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                            <button class="btn-small btn-delete" onclick="deleteJob(${jobs.indexOf(job)})">‡∏•‡∏ö</button>
                        </td>
                    </tr>
                `;
            }).join('');
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏á‡∏≤‡∏ô
        function editJob(index) {
            const job = jobs[index];
            
            document.getElementById('date').value = job.date;
            document.getElementById('location').value = job.location;
            document.getElementById('time').value = job.time;
            document.getElementById('owner').value = job.owner;
            document.getElementById('status').value = job.status;
            document.getElementById('messenger').value = job.messenger;
            document.getElementById('details').value = job.details;
            
            editingIndex = index;
            document.querySelector('.btn[type="submit"]').textContent = 'üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç';
            
            // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.querySelector('.form-section').scrollIntoView({ behavior: 'smooth' });
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏á‡∏≤‡∏ô
        function deleteJob(index) {
            if (confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ?')) {
                jobs.splice(index, 1);
                saveToStorage();
                renderTable();
            }
        }
        
        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏≠‡∏õ
        init();
    </script>
</body>
</html>
